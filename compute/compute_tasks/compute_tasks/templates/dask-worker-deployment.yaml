apiVerison: apps/v1
kind: Deployment
metadata:
  name: dask-worker-{{ user }}
  labels:
    app.kubernetes.io/dask-component: worker
    app.kubernetes.io/user: "{{ user }}"
spec:
  replicas: {{ workers }}
  selector:
    matchLabels:
      app.kubernetes.io/dask-component: worker
      app.kubernetes.io/user: "{{ user }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/dask-component: worker
        app.kubernetes.io/user: "{{ user }}"
    spec:
      {% if image_pull_secret %}
      imagePullSecrets:
      - name: {{ image_pull_secret }}
      {% endif %}
      containers:
      - name: dask-worker-{{ user }}
        image: {{ image }}
        imagePullPolicy: Always
        env:
        - name: CDAT_ANONYMOUS_LOG
          value: 'no'
        - name: CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: dask-worker-{{ user }}
              resource: limits.cpu
        - name: MEM_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: dask-worker-{{ user }}
              resource: limits.memory
              divisor: 1Gi
        command:
        - dask-worker
        - --no-bokeh
        - --nthreads
        - '4'
        - --nprocs
        - $(CPU_LIMIT)
        - --memory-limit
        - $(MEM_LIMIT)GB
        - --death-timeout
        - '60'
        - dask-scheduler-{{ user }}:8786
      {% if not dev %}
        resources:
          limits:
            cpu: 1
            memory: 8Gi
          request:
            cpu: 1
            memory: 8Gi
      {% endif %}
        volumeMounts:
        - mountPath: /data/public
          name: data-volume
          subPath: public
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ data_claim_name }}
