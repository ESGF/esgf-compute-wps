To add a new kernel to CDAS, follow these steps (you can use the CDTime module as an example):

1) Create a subdirectory of the kernels directory.   The name of this directory will be the kernel ID.
2) Add a python module (file) that defines the kernel class.  The kernel class should inherit from the CDASKernel and implement the CDASKernel.run method.
3) Add an __init__.py file that defines a getConstructor function that returns the constructor for kernel class.
4) Your kernel's run methods will be invoked whenever a command that references your kernel is executed in an operation.

Example operation:  CDTime.departures(v0,slice:t), CDTime.climatology(v0,slice:t,bounds:annualcycle), CDTime.value(v0)

This operation invokes the CDTime kernel's run method three times to execute the 'departures', 'climatology', and 'value' kernel operations.

Example 'run' method implementation:

    def run( self, subsetted_variables, metadata_recs, region, operation ):
         method = operation.get('method','').lower()
         if method == 'climatology':
             bounds = operation.get('bounds','').lower()
             if bounds == 'annualcycle':
                  # Implement operation