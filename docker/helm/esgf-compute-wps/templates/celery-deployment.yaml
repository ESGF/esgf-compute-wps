{{- range .Values.celery.queues }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-celery-{{ .name }}
  labels:
    app: {{ $.Release.Name }}-celery-{{ .name }}
    chart: {{ template "esgf-compute-wps.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-celery-{{ .name }}
      release: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-celery-{{ .name }}
        chart: {{ template "esgf-compute-wps.chart" $ }}
        release: {{ $.Release.Name }}
        heritage: {{ $.Release.Service }}
    {{- if .annotations }}
      annotations:
      {{- .annotations | toYaml | trimSuffix "\n" | nindent 8 }}
    {{- end }}
    spec:
      serviceAccountName: wps-dask
      {{- if $.Values.celery.nodeSelector }}
      nodeSelector: 
        {{ $.Values.celery.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      containers:
      - name: {{ $.Release.Name }}-celery-{{ .name }}
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: IfNotPresent
        {{- if not $.Values.development }}
        args: 
          - "-l"
          - "INFO"
          - "-c"
          - "1"
          - "--max-memory-per-child"
{{- if contains "G" $.Values.celery.resources.limits.memory }}
  {{- (printf "- %s" ($.Values.celery.resources.limits.memory | regexFind "([0-9]+)" | mul 1000000000 | quote ) | nindent 10) }}
{{- else if contains "M" $.Values.celery.resources.limits.memory }}
  {{- (printf "- %s" ($.Values.celery.resources.limits.memory | regexFind "([0-9]+)" | mul 1000000 | quote ) | nindent 10) }}
{{- else }}
  {{- printf "- \"100000000\"" | nindent 10 }}
{{- end }}
          - "-n"
          - "$(HOSTNAME)"
        {{- range $key, $value := .argsExtra }}
          - {{ $key | quote }}
          - {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if $.Values.development }}
        command:
          - sleep
          - infinity
        {{- end }}
        {{- if not $.Values.development }}
        livenessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        {{- end }}
        {{- if and $.Values.celery.resources (not $.Values.development) (not $.Values.ignoreResources) }}
        resources: {{ $.Values.celery.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        {{- end }}
        {{- if .ports }}
        ports:
        {{- range .ports }}
        - containerPort: {{ .port }}
          protocol: TCP
        {{- end }}
        {{- end }}
        env:
        {{- if $.Values.development }}
        - name: WPS_DEBUG
          value: "1"
        {{- end }}
        {{- if $.Values.celery.metrics }}
        - name: CWT_METRICS
          value: {{ $.Values.celery.metrics | quote }}
        {{- end }}
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WPS_HOST
          value: {{ $.Values.wps.host }}
        - name: CELERY_BROKER_URL
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: CELERY_RESULT_BACKEND
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: POSTGRES_HOST
          value: {{ template "postgresql.fullname" $ }}
        - name: POSTGRES_HOST
          value: {{ template "postgresql.fullname" $ }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: postgres_password
        - name: OAUTH_CLIENT
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: oauth_client
        - name: OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: oauth_secret
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data/cache
          name: cache-volume
          subPath: cache
        - mountPath: /data/public
          name: public-volume
          subPath: public
      volumes:
      - name: config-volume
        configMap:
            name: {{ template "esgf-compute-wps.fullname" $ }}-django-config
      - name: cache-volume
        persistentVolumeClaim:
          claimName: cache-pvc
      - name: public-volume
        persistentVolumeClaim:
          claimName: public-pvc
---
{{- end }}
