apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-wps
  labels:
    app: {{ .Release.Name }}-wps
    chart: {{ template "esgf-compute-wps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.wps.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-wps
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-wps
        chart: {{ template "esgf-compute-wps.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    {{- if .Values.wps.annotations }}
      annotations:
      {{- .Values.wps.annotations | toYaml | trimSuffix "\n" | nindent 8 }}
    {{- end }}
    spec:
      {{- if .Values.wps.nodeSelector }}
      nodeSelector: 
        {{ .Values.wps.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      containers:
      - name: {{ .Release.Name }}-wps
        image: {{ .Values.wps.image }}:{{ .Values.wps.imageTag }}
        imagePullPolicy: {{ .Values.wps.imagePullPolicy }}
        {{- if .Values.development }}
        command:
          - tini
          - --
          - sleep
          - infinity
        {{- end }}
        {{- if not $.Values.development }}
        livenessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        {{- end }}
        {{- if and $.Values.wps.resources (not $.Values.development) (not $.Values.ignoreResources) }}
        resources: {{ $.Values.wps.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        {{- end }}
        env:
        {{- if $.Values.development }}
        - name: WPS_DEBUG
          value: "1"
        {{- end }}
        - name: WPS_HOST
          value: {{ $.Values.wps.host }}
        - name: CELERY_BROKER_URL
          value: redis://{{ template "redis.fullname" . }}-master/0
        - name: CELERY_RESULT_BACKEND
          value: redis://{{ template "redis.fullname" . }}-master/0
        - name: POSTGRES_HOST
          value: {{ template "postgresql.fullname" . }}
        envFrom:
        - secretRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
        ports:
        {{- range .Values.wps.ports }}
        - containerPort: {{ .port }}
          protocol: TCP
          name: {{ .name }}
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        {{- if .Values.development }}
        - name: devel-volume
          mountPath: /devel
        {{- end }}
      volumes:
      {{- if .Values.development }}
      - name: devel-volume
        hostPath: 
          path: /opt/cwt/devel
          type: DirectoryOrCreate
      {{- end }}
      - name: config-volume
        configMap:
          name: {{ template "esgf-compute-wps.fullname" $ }}-django-config
