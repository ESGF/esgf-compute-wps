apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-wps
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /wps/metrics
    prometheus.io/port: "8000"
  labels:
    app: {{ .Release.Name }}-wps
    chart: {{ template "esgf-compute-wps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if $.Values.wps.annotations }}
  annotations:
    {{ toYaml $.Values.wps.annotations | indent 2 }}
{{- end }}
spec:
  replicas: {{ .Values.wps.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-wps
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-wps
        chart: {{ template "esgf-compute-wps.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      containers:
      - name: {{ .Release.Name }}-wps
        image: {{ .Values.wps.image }}:{{ .Values.wps.imageTag }}
        {{- if .Values.development }}
        command:
          - sleep
          - infinity
        {{- end }}
        {{- if not $.Values.development }}
        livenessProbe:
          httpGet:
            path: /wps/
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /wps/
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 60
        {{- end }}
        resources:
        {{- if not .Values.development }}
          limits:
            cpu: {{ .Values.wps.resources.cpuLimit }}
            memory: {{ .Values.wps.resources.memoryLimit }}
        {{- end }}
          requests:
            cpu: {{ .Values.wps.resources.cpuRequest }}
            memory: {{ .Values.wps.resources.memoryRequest }}
        env:
        {{- if $.Values.development }}
        - name: WPS_DEBUG
          value: "1"
        {{- end }}
        - name: AIRFLOW_HOME
          value: /etc/config
        - name: WPS_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-config
              key: WPS_HOST
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-config
              key: CELERY_RESULT_BACKEND
        - name: POSTGRES_HOST
          value: {{ template "postgresql.fullname" . }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: postgres_password
        - name: OAUTH_CLIENT
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: oauth_client
        - name: OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "esgf-compute-wps.fullname" $ }}-app-secret
              key: oauth_secret
        ports:
        {{- range .Values.wps.ports }}
        - containerPort: {{ .port }}
          protocol: TCP
          name: {{ .name }}
        {{- end }}
        volumeMounts:
        {{- if .Values.development }}
        - mountPath: /var/www
          name: shared-volume
          subPath: shared
        {{- end }}
        - name: config-volume
          mountPath: /etc/config
        - name: static-volume
          mountPath: /var/www/static
          subPath: static
      volumes:
      {{- if .Values.development }}
      - name: shared-volume
        hostPath:
          path: {{ .Values.wps.data.sharedPath }}
          type: DirectoryOrCreate
      {{- end }}
      - name: config-volume
        configMap:
          name: {{ template "esgf-compute-wps.fullname" $ }}-django-config
      - name: static-volume
        hostPath:
          path: {{ .Values.wps.data.staticPath }}
          type: DirectoryOrCreate
