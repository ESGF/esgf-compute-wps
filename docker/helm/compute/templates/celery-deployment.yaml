{{- range .Values.celery.queues }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "esgf-compute-wps.fullname" $ }}-celery-{{ .name }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: celery
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: celery
    {{- if .annotations }}
      annotations:
      {{- .annotations | toYaml | trimSuffix "\n" | nindent 8 }}
    {{- end }}
    spec:
      serviceAccountName: wps-dask
      {{- if $.Values.celery.nodeSelector }}
      nodeSelector: 
        {{ $.Values.celery.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      {{- if $.Values.celery.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.celery.imagePullSecret }}
      {{- end }}
      containers:
      - name: {{ template "esgf-compute-wps.name" $ }}-celery-{{ .name }}-metrics
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        command:
          - tini
          - --
        args:
          - /bin/bash
          - -c
          - "mkdir -p /metrics && compute-tasks-metrics"
        resources:
          {{ $.Values.celery.backend.resources | toYaml | trimSuffix "\n" | nindent 10 }}
      - name: {{ template "esgf-compute-wps.name" $ }}-celery-{{ .name }}-backend
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        {{- if $.Values.celery.backend.development }}
        command:
          - /bin/sleep
          - infinity
        {{- else }}
        command:
          - tini
          - --
        args:
          - /bin/bash
          - -c
          - "mkdir -p /metrics && compute-tasks-backend"
        {{- end }}
        resources:
          {{ $.Values.celery.backend.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        env:
        {{- if $.Values.celery.backend.development }}
        - name: DEV
          value: "1"
        {{- end }}
        - name: IMAGE
          value: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        - name: IMAGE_PULL_SECRETS
          value: {{ $.Values.celery.imagePullSecret }}
        - name: DATA_CLAIM_NAME
          value: {{ $.Values.persistence.dataClaimName }}
        - name: PROVISIONER_BACKEND
          value: {{ template "esgf-compute-wps.fullname" $ }}-provisioner.{{ $.Release.Namespace }}.svc:{{ $.Values.provisioner.backendPort }}
        - name: INTERNAL_LB
          value: {{ template "traefik.fullname" $ }}.{{ $.Release.Namespace }}.svc
        - name: API_USERNAME
          value: {{ $.Values.wps.apiUsername }}
        - name: API_PASSWORD
          value: {{ $.Values.wps.apiPassword }}
        - name: CELERY_BROKER_URL
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: CELERY_RESULT_BACKEND
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: WORKERS
          value: {{ $.Values.provisioner.workers | quote }}
        - name: DATA_PATH
          value: /data/public
        volumeMounts:
        {{- if $.Values.celery.backend.development }}
        - name: devel-volume
          mountPath: /devel
        {{- end }}
        - mountPath: /metrics
          name: metrics-volume
      - name: {{ template "esgf-compute-wps.name" $ }}-celery-{{ .name }}
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        {{- if not $.Values.celery.development }}
        command: ["tini", "--"]
        args: 
          - /bin/bash
          - entrypoint.sh
          - "-c"
          - "1"
          - "-Q"
          - "{{ .name }}"
          - "-l"
          - "DEBUG"
          - "--max-tasks-per-child"
          - "1"
        {{- end }}
        {{- if $.Values.celery.development }}
        command:
          - tini
          - --
          - sleep
          - infinity
        {{- end }}
        {{- if not $.Values.development }}
        livenessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        {{- end }}
        resources: {{ $.Values.celery.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        {{- if .ports }}
        ports:
        {{- range .ports }}
        - containerPort: {{ .port }}
          protocol: TCP
        {{- end }}
        {{- end }}
        env:
        {{- if $.Values.celery.development }}
        - name: DEV
          value: "1"
        - name: WPS_DEBUG
          value: "1"
        {{- end }}
        - name: PROVISIONER_BACKEND
          value: {{ template "esgf-compute-wps.fullname" $ }}-provisioner.{{ $.Release.Namespace }}.svc:{{ $.Values.provisioner.backendPort }}
        - name: CELERY_BROKER_URL
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: CELERY_RESULT_BACKEND
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: PROMETHEUS_HOST
          value: {{ required "Set celery.prometheusUrl" $.Values.celery.prometheusUrl }}
        - name: INTERNAL_LB
          value: {{ template "traefik.fullname" $ }}.{{ $.Release.Namespace }}.svc
        - name: API_USERNAME
          value: {{ $.Values.wps.apiUsername }}
        - name: API_PASSWORD
          value: {{ $.Values.wps.apiPassword }}
        - name: NAMESPACE
          value: {{ $.Release.Namespace }}
        - name: DATA_PATH
          value: /data/public
        envFrom:
        - secretRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-wps
        volumeMounts:
        {{- if $.Values.celery.development }}
        - name: devel-volume
          mountPath: /devel
        {{- end }}
        - mountPath: /metrics
          name: metrics-volume
        - mountPath: /data/public
          name: data-volume
          subPath: public
      volumes:
      {{- if $.Values.celery.development }}
      - name: devel-volume
        hostPath: 
          path: /opt/cwt/devel
          type: DirectoryOrCreate
      {{- end }}
      - name: metrics-volume
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.persistence.dataClaimName | default "data-pvc" }}
---
{{- end }}
