#!/bin/bash

password='abcd'

base="/usr/local/ophidia"
cert="$base/oph-server/etc/cert"
root_key="$cert/rootkey.pem"
root_req="$cert/rootreq.pem"
root_cert="$cert/rootcert.pem"
ca_cert="$cert/cacert.pem"
srv_key="$cert/serverkey.pem"
srv_req="$cert/serverreq.pem"
srv_cert="$cert/servercert.pem"
myserver="$cert/myserver.pem"

function create_server_certs {
  ssh-keygen -t dsa -f ~/.ssh/id_dsa -N ""

  cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys

  chmod 0600 ~/.ssh/authorized_keys

  mkdir -p "$cert"

  openssl req -newkey rsa:1024 -passout pass:$password -subj "/" -sha1 \
    -keyout $root_key -out $root_req

  openssl x509 -req -in $root_req -passin pass:$password -sha1 -extensions v3_ca \
    -signkey $root_key -out $root_cert

  cat $root_cert $root_key > $ca_cert

  openssl req -newkey rsa:1024 -passout pass:$password -subj "/" -sha1 \
    -keyout $srv_key -out $srv_req

  openssl x509 -req -in $srv_req -passin pass:$password -sha1 -extensions usr_cert \
    -CA $ca_cert -CAkey $ca_cert -CAcreateserial -out $srv_cert

  cat $srv_cert $srv_key $root_cert > $myserver
}

create_server_certs

cat << EOF > /usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/oph_configuration
MAPPER_DB_NAME=ophidiadb
MAPPERDB_HOST=127.0.0.1
MAPPERDB_PORT=3306
MAPPERDB_LOGIN=root
MAPPERDB_PWD=abcd
WEB_SERVER=http://127.0.0.1/ophidia
WEB_SERVER_LOCATION=/var/www/html/ophidia
MEMORY=2048
EOF

cat << EOF > /usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/oph_dim_configuration
MAPPER_DB_NAME=oph_dimensions
MAPPERDB_HOST=127.0.0.1
MAPPERDB_PORT=3306
MAPPERDB_LOGIN=root
MAPPERDB_PWD=abcd
EOF

cat << EOF > /usr/local/ophidia/oph-server/etc/ophidia.conf
MAPPER_DB_NAME=ophidiadb
MAPPERDB_HOST=127.0.0.1
MAPPERDB_PORT=3306
MAPPERDB_LOGIN=root
MAPPERDB_PWD=abcd
EOF

cat << EOF > /usr/local/ophidia/oph-server/etc/server.conf
TIMEOUT=3600
INACTIVITY_TIMEOUT=31536000
WORKFLOW_TIMEOUT=2592000
LOGFILE=/usr/local/ophidia/oph-server/log/server.log
CERT=/usr/local/ophidia/oph-server/etc/cert/myserver.pem
CA=/usr/local/ophidia/oph-server/etc/cert/cacert.pem
CERT_PASSWORD=abcd
RMANAGER_CONF_FILE=/usr/local/ophidia/oph-server/etc/rmanager.conf
AUTHZ_DIR=/usr/local/ophidia/oph-server/authz
TXT_DIR=/usr/local/ophidia/oph-server/txt
WEB_SERVER=http://127.0.0.1/ophidia
WEB_SERVER_LOCATION=/var/www/html/ophidia
OPERATOR_CLIENT=/usr/local/ophidia/oph-cluster/oph-analytics-framework/bin/oph_analytics_framework
IP_TARGET_HOST=127.0.0.1
SUBM_USER=root
SUBM_USER_PUBLK=/root/.ssh/id_dsa.pub
SUBM_USER_PRIVK=/root/.ssh/id_dsa
OPH_XML_URL=http://127.0.0.1/ophidia/operators_xml
OPH_XML_DIR=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/operators_xml
NOTIFIER=framework
SERVER_FARM_SIZE=2
QUEUE_SIZE=0
HOST=127.0.0.1
PORT=11732
PROTOCOL=https
EOF

mkdir -p "/usr/local/ophidia/extra/etc"

cat << EOF > /usr/local/ophidia/extra/etc/slurm.conf
# slurm.conf file generated by configurator easy.html.
# Put this file on all nodes of your cluster.
# See the slurm.conf man page for more information.
#
ControlMachine=$(hostname)
#ControlAddr=
# 
#MailProg=/bin/mail 
MpiDefault=none
#MpiParams=ports=#-# 
ProctrackType=proctrack/pgid
ReturnToService=1
SlurmctldPidFile=/var/run/slurmctld.pid
#SlurmctldPort=6817 
SlurmdPidFile=/var/run/slurmd.pid
#SlurmdPort=6818 
SlurmdSpoolDir=/var/spool/slurmd
SlurmUser=root
#SlurmdUser=root 
StateSaveLocation=/var/spool
SwitchType=switch/none
TaskPlugin=task/none
# 
# 
# TIMERS 
#KillWait=30 
#MinJobAge=300 
#SlurmctldTimeout=120 
#SlurmdTimeout=300 
# 
# 
# SCHEDULING 
FastSchedule=1
SchedulerType=sched/backfill
#SchedulerPort=7321 
SelectType=select/linear
# 
# 
# LOGGING AND ACCOUNTING 
AccountingStorageType=accounting_storage/none
ClusterName=cluster
#JobAcctGatherFrequency=30 
JobAcctGatherType=jobacct_gather/none
#SlurmctldDebug=3 
#SlurmctldLogFile=
#SlurmdDebug=3 
#SlurmdLogFile=
# 
# 
# COMPUTE NODES 
NodeName=$(hostname) CPUs=1 State=UNKNOWN 
PartitionName=debug Nodes=$(hostname) Default=YES MaxTime=INFINITE State=UP
EOF

if [[ "${HTTP:-0}" -eq "1" ]]
then
  openssl genrsa -out ca.key 2048
  openssl req -new -key ca.key -out ca.csr
  openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt

  cp ca.crt /etc/pki/tls/certs
  cp ca.key /etc/pki/tls/private/ca.key
  cp ca.csr /etc/pki/tls/private/cs.csr
fi

sed -ibak 's/(SSLCertificateFile).*/\\1 \/etc\/pki\/tls\/certs\/ca.crt/g' /etc/httpd/conf.d/ssl.conf
sed -ibak 's/(SSLCertificateKeyFile).*/\\1 \/etc\/pki\/tls\/private\/ca.key/g' /etc/httpd/conf.d/ssl.conf
sed -ibak 's/Listen 80/Listen 0.0.0.0:80/g' /etc/httpd/conf/httpd.conf

service mysqld start

mysqladmin -u root password 'abcd'

mysql -u root --password='abcd' mysql < /usr/local/ophidia/oph-cluster/oph-primitives/etc/create_func.sql
mysql -u root --password='abcd' mysql -e "create database ophidiadb;"
mysql -u root --password='abcd' mysql -e "create database oph_dimensions;"
mysql -u root --password='abcd' ophidiadb < /usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/ophidiadb.sql
mysql -u root --password='abcd' ophidiadb -e "INSERT INTO host (hostname, cores, memory) VALUES ('127.0.0.1', 4, 1);"
mysql -u root --password='abcd' ophidiadb -e "INSERT INTO dbmsinstance (idhost, login, password, port) VALUES (1, 'root', 'abcd', 3306);"
mysql -u root --password='abcd' ophidiadb -e "INSERT INTO hostpartition (partitionname) VALUES ('test');"
mysql -u root --password='abcd' ophidiadb -e "INSERT INTO hashost VALUES (1, 1);"

/usr/local/ophidia/extra/sbin/slurmctld
/usr/local/ophidia/extra/sbin/slurmd

service httpd start
service sshd start
service munge start

sed -ibak 's/\(SUBM_CMD\).*/\1=\/usr\/local\/ophidia\/extra\/bin\/srun/g' /usr/local/ophidia/oph-server/etc/rmanager.conf
sed -ibak 's/\(SUBM_CANCEL\).*/\1=\/usr\/local\/ophidia\/extra\/bin\/scancel -n/g' /usr/local/ophidia/oph-server/etc/rmanager.conf
sed -ibak 's/\(SUBM_JOBCHECK\).*/\1=\/usr\/local\/ophidia\/extra\/bin\/squeue -o "%j" | grep oph/g' /usr/local/ophidia/oph-server/etc/rmanager.conf

exec "$@"
